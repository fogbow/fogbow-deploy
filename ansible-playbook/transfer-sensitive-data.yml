# This playbook must to transfer sensitive datas, always taking care in its permission in remote machine

- hosts: localhost
  connection: local
  vars:
    clouds_directory: ../conf-files/clouds

    certificates_conf_path: ../conf-files/apache-confs/certificate-files.conf
    ssl_certificate_file_pattern: SSL_certificate_file_path
    ssl_certificate_key_file_pattern: SSL_certificate_key_file_path
    ssl_certificate_chain_file_pattern: SSL_certificate_chain_file_path

    # ldap_token_generator_conf_path: ../conf-files/aaa-plugins/token-generator/ldap-token-generator-plugin.conf
    # ldap_file_pattern: private_key_file_path
  tasks:
    - name: Get all clouds directory
      shell: "ls {{ clouds_directory }}"
      register: clouds_dir_out

    - name: Get SSL certificate file path
      shell: grep "^{{ ssl_certificate_file_pattern }}" {{ certificates_conf_path }} | awk -F "=" '{print $2}'
      register: ssl_certificate_file_path
    - name: Get SSL certificate key file path
      shell: grep "^{{ ssl_certificate_key_file_pattern }}" {{ certificates_conf_path }} | awk -F "=" '{print $2}'
      register: ssl_certificate_key_file_path
    - name: Get SSL certificate chainfile path
      shell: grep "^{{ ssl_certificate_chain_file_pattern }}" {{ certificates_conf_path }} | awk -F "=" '{print $2}'
      register: ssl_certificate_chain_file_path

    # - name: Get ldap private key path
    #   shell: grep "^{{ ldap_file_pattern }}" {{ ldap_token_generator_conf_path }} | awk -F "=" '{print $2}'
    #   register: ldap_pk_path

- hosts: internal-machine
  vars:
    fogbow_components: ~/fogbow-components
    conf_files: conf-files
    as_dir_name: authentication-service
    fns_dir_name: federated-network-service
    ras_dir_name: resource-allocation-service
    db_dir_name: fogbow-database

    private_key_as_path: ../services/authentication-service/conf-files/id_rsa
    private_key_fns_to_dmz_path: ../services/federated-network-service/conf-files/dmz-id_rsa
    private_key_fns_path: ../services/federated-network-service/conf-files/id_rsa
    private_key_ras_path: ../services/resource-allocation-service/conf-files/id_rsa

    secrets_db: ../services/fogbow-database/secrets
    secrets_fns: ../services/federated-network-service/conf-files/secrets

    ras_conf: ../services/resource-allocation-service/conf-files/ras.conf
    fns_conf: ../services/federated-network-service/conf-files/fns.conf
  tasks:
    - name: Copy private keys to internal machine
      copy: src={{ item.src }} dest={{ item.dest }} mode=0600
      with_items:
        - { src: "{{ private_key_as_path }}", dest: "{{ fogbow_components }}/{{ as_dir_name }}/{{ conf_files }}" }
        - { src: "{{ private_key_fns_to_dmz_path }}", dest: "{{ fogbow_components }}/{{ fns_dir_name }}/{{ conf_files }}" }
        - { src: "{{ private_key_fns_path }}", dest: "{{ fogbow_components }}/{{ fns_dir_name }}/{{ conf_files }}" }
        - { src: "{{ private_key_ras_path }}", dest: "{{ fogbow_components }}/{{ ras_dir_name }}/{{ conf_files }}" }

    - name: Copy secrets file to internal machine
      copy: src={{ item.src }} dest={{ item.dest }} mode=0600
      with_items:
        - { src: "{{ secrets_db }}", dest: "{{ fogbow_components }}/{{ db_dir_name }}" }
        - { src: "{{ secrets_fns }}", dest: "{{ fogbow_components }}/{{ fns_dir_name }}/{{ conf_files }}" }

    - name: Copy service specific configuration file to internal machine
      copy: src={{ item.src }} dest={{ item.dest }} mode=0600
      with_items:
        - { src: "{{ ras_conf }}", dest: "{{ fogbow_components }}/{{ fns_dir_name }}/{{ conf_files }}" }
        - { src: "{{ fns_conf }}", dest: "{{ fogbow_components }}/{{ ras_dir_name }}/{{ conf_files }}" }

- hosts: dmz-machine
  vars:
    fogbow_components: ~/fogbow-components
    agent_dir_name: federated-network-agent
    prosody_conf_path: ../services/xmpp-server/prosody.cfg.lua
    xmpp_dir_name: xmpp-server
    ipsec_conf_path: ../services/federated-network-agent/ipsec.conf
    fn_agent_dir_name: federated-network-agent

    secrets_agent: ../services/federated-network-agent/secrets
  tasks:
    - name: Copy secrets, prosody and ipsec confs to DMZ machine
      copy: src={{ item.src }} dest={{ item.dest }} mode=0600
      with_items:
        - { src: "{{ secrets_agent }}", dest: "{{ fogbow_components }}/{{ agent_dir_name }}" }
        - { src: '{{ prosody_conf_path }}', dest: '{{ fogbow_components }}/{{ xmpp_dir_name }}' }
        - { src: '{{ ipsec_conf_path }}', dest: '{{ fogbow_components }}/{{ fn_agent_dir_name }}' }

# - hosts: internal-machine
#   vars:
#     fogbow_components: ~/fogbow-components
#     conf_files: conf-files
#     ras_dir_name: resource-allocation-service
#   tasks:
#     - name: Retrieve ldap private key path
#       set_fact: 
#         ldap_pk_path: "{{ hostvars['localhost']['ldap_pk_path'] }}"
#       when: hostvars['localhost']['ldap_pk_path'] is defined

#     # This task guarantees that will run only if ldap_pk_path.stdout is not an empty string
#     - name: Copying ldap private key to Internal-Machine
#       copy:
#         src: "{{ ldap_pk_path.stdout }}"
#         dest: "{{ item }}"
#         mode: 0600
#       with_items:
#         - "{{ fogbow_components }}/{{ ras_dir_name }}/{{ conf_files }}"
#       when: hostvars['localhost']['ldap_pk_path'].stdout != ""

- hosts: internal-machine
  vars:
    fogbow_components: ~/fogbow-components
    apache_dir_name: apache-server
  tasks:
    - name: Retrieve certificates path
      set_fact: 
        ssl_certificate_file_path: "{{ hostvars['localhost']['ssl_certificate_file_path'] }}"
        ssl_certificate_key_file_path: "{{ hostvars['localhost']['ssl_certificate_key_file_path'] }}"
        ssl_certificate_chain_file_path: "{{ hostvars['localhost']['ssl_certificate_chain_file_path'] }}"

    # This task guarantees that will run only if ssl_certificate_file_path.stdout is not an empty string
    - name: Test empty value in ssl_certificate_file_path property
      fail: msg="Please, check the certificates conf file. One or more value is probably empty"
      when: hostvars['localhost']['ssl_certificate_file_path'].stdout == ""
    - name: Copying SSL certificate file to Internal-Machine
      copy:
        src: "{{ ssl_certificate_file_path.stdout }}"
        dest: "{{ fogbow_components }}/{{ apache_dir_name }}"
        mode: 0600

    # This task guarantees that will run only if ssl_certificate_key_file_path.stdout is not an empty string
    - name: Test empty value in ssl_certificate_key_file_path property
      fail: msg="Please, check the certificates conf file. One or more value is probably empty"
      when: hostvars['localhost']['ssl_certificate_key_file_path'].stdout == ""
    - name: Copying SSL certificate key file to Internal-Machine
      copy:
        src: "{{ ssl_certificate_key_file_path.stdout }}"
        dest: "{{ fogbow_components }}/{{ apache_dir_name }}"
        mode: 0600

    # This task guarantees that will run only if ssl_certificate_chain_file_path.stdout is not an empty string
    - name: Test empty value in ssl_certificate_chain_file_path property
      fail: msg="Please, check the certificates conf file. One or more value is probably empty"
      when: hostvars['localhost']['ssl_certificate_chain_file_path'].stdout == ""
    - name: Copying SSL certificate chain file to Internal-Machine
      copy:
        src: "{{ ssl_certificate_chain_file_path.stdout }}"
        dest: "{{ fogbow_components }}/{{ apache_dir_name }}"
        mode: 0600


- hosts: internal-machine
  vars:
    clouds_directory: ../conf-files/clouds
    fogbow_components: ~/fogbow-components
    ras_dir_name: resource-allocation-service
    mapper_file: mapper.conf
    conf_fils_dirname: conf-files
    clouds_dirname: clouds
  tasks:
    - name: Retrieve clouds dir output
      set_fact:
        clouds_dir: "{{ hostvars['localhost']['clouds_dir_out'] }}"
    - name: Copy mapper.conf files to internal host
      copy:
        src: "{{ clouds_directory }}/{{ item }}/{{ mapper_file }}"
        dest: "{{ fogbow_components }}/{{ ras_dir_name }}/{{ conf_fils_dirname }}/{{ clouds_dirname }}/{{ item }}/{{ mapper_file }}"
        mode: 0600
      with_items:
        - "{{ clouds_dir.stdout_lines }}"
