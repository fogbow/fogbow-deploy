#!/bin/bash
DIR_PATH=$(pwd)

# TODO create new image
IMAGE_NAME="*****************"
CONTAINER_NAME="apache-shibboleth-server"

INSECURE_PORT="80"
SECURE_PORT="443"

# Certificate files
## All fogbow environment
CERT_CONF_FILE="certificate-files.conf"

CERTIFICATE_FILE="SSL_certificate_file_path"
CERTIFICATE_FILE_PATH=$(grep $CERTIFICATE_FILE $CERT_CONF_FILE | awk -F "=" '{print $2}')
CERTIFICATE_FILE_NAME=$(basename $CERTIFICATE_FILE_PATH)

CERTIFICATE_KEY_FILE="SSL_certificate_key_file_path"
CERTIFICATE_KEY_FILE_PATH=$(grep $CERTIFICATE_KEY_FILE $CERT_CONF_FILE | awk -F "=" '{print $2}')
CERTIFICATE_KEY_FILE_NAME=$(basename $CERTIFICATE_KEY_FILE_PATH)

CERTIFICATE_CHAIN_FILE="SSL_certificate_chain_file_path"
CERTIFICATE_CHAIN_FILE_PATH=$(grep $CERTIFICATE_CHAIN_FILE $CERT_CONF_FILE | awk -F "=" '{print $2}')
CERTIFICATE_CHAIN_FILE_NAME=$(basename $CERTIFICATE_CHAIN_FILE_PATH)

## Shibbolethh
SERVICE_PROVIDER_CERTIFICATE_FILE="SSL_service_provider_certificate_file_path"
SERVICE_PROVIDER_CERTIFICATE_FILE_PATH=$(grep $SERVICE_PROVIDER_CERTIFICATE_FILE $CERT_CONF_FILE | awk -F "=" '{print $2}')
SERVICE_PROVIDER_CERTIFICATE_FILE_NAME=$(basename $SERVICE_PROVIDER_CERTIFICATE_FILE_PATH)

SERVICE_PROVIDER_CERTIFICATE_KEY_FILE="SSL_service_provider_key_file_path"
SERVICE_PROVIDER_CERTIFICATE_KEY_FILE_PATH=$(grep $SERVICE_PROVIDER_CERTIFICATE_KEY_FILE $CERT_CONF_FILE | awk -F "=" '{print $2}')
SERVICE_PROVIDER_CERTIFICATE_KEY_FILE_NAME=$(basename $SERVICE_PROVIDER_CERTIFICATE_KEY_FILE_PATH)

SSL_DIR="/etc/ssl/private"
VIRTUAL_HOST_DIR="/etc/apache2/sites-enabled"
ROOT_DIR="/var/www/html"
CONF_DIR="/etc/apache2"
SHIBBOLETH_CONF_DIR="/etc/shibboleth"
SECURE_INDEX_PATH="/var/www/secure/index.html"
VIRTUAL_HOST_FILE="000-default.conf"
INDEX_FILE="index.html"
PORTS_FILE="ports.conf"
VIRTUAL_HOST_SHIBBOLETH_ENVIRONMENT_80_FILE="default.conf"
VIRTUAL_HOST_SHIBBOLETH_ENVIRONMENT_443_FILE="shibboleth-sp2.conf"
CONFIGURATION_SHIBBOLETH_ENVIRONMENT_ATTRIBUTES_MAP_FILE="attribute-map.xml"
CONFIGURATION_SHIBBOLETH_ENVIRONMENT_ATTRIBUTES_POLICY_FILE="attribute-policy.xml"
CONFIGURATION_SHIBBOLETH_ENVIRONMENT_SHIBBOLETH_XML_FILE="shibboleth2.xml"
CONFIGURATION_SHIBBOLETH_ENVIRONMENT_INDEX_SECURE_FILE="index-secure.html"

SERVICES_CONF=$DIR_PATH/"services.conf"
IMAGE_BASE_NAME=$(basename $IMAGE_NAME)
TAG=$(grep $IMAGE_BASE_NAME $SERVICES_CONF | awk -F "=" '{print $2}')

if [ -z ${TAG// } ]; then
	TAG="latest"
fi

sudo docker stop $CONTAINER_NAME
sudo docker rm $CONTAINER_NAME
sudo docker pull $IMAGE_NAME:$TAG

sudo docker run -tdi --name $CONTAINER_NAME \
	-p $SECURE_PORT:$SECURE_PORT \
	-p $INSECURE_PORT:$INSECURE_PORT \
	-v $DIR_PATH/$CERTIFICATE_FILE_NAME:$SSL_DIR/$CERTIFICATE_FILE_NAME \
	-v $DIR_PATH/$CERTIFICATE_KEY_FILE_NAME:$SSL_DIR/$CERTIFICATE_KEY_FILE_NAME \
	-v $DIR_PATH/$CERTIFICATE_CHAIN_FILE_NAME:$SSL_DIR/$CERTIFICATE_CHAIN_FILE_NAME \
  -v $SERVICE_PROVIDER_CERTIFICATE_KEY_FILE_PATH:$SSL_DIR/"DOMAIN.crt" \
  -v $SERVICE_PROVIDER_CERTIFICATE_KEY_FILE_PATH:$SSL_DIR/"DOMAIN.ket" \
	$IMAGE_NAME:$TAG

SHIBBOLETH_ENVIRONMENT_DIR=$DIR_PATH/"shibboleth-environment"
sudo docker cp $VIRTUAL_HOST_FILE $CONTAINER_NAME:$VIRTUAL_HOST_DIR/$VIRTUAL_HOST_FILE
sudo docker cp $INDEX_FILE $CONTAINER_NAME:$ROOT_DIR
sudo docker cp $PORTS_FILE $CONTAINER_NAME:$CONF_DIR

sudo docker cp $SHIBBOLETH_ENVIRONMENT_DIR/$VIRTUAL_HOST_SHIBBOLETH_ENVIRONMENT_80_FILE $CONTAINER_NAME:$VIRTUAL_HOST_DIR/$VIRTUAL_HOST_SHIBBOLETH_ENVIRONMENT_80_FILE
sudo docker cp $SHIBBOLETH_ENVIRONMENT_DIR/$VIRTUAL_HOST_SHIBBOLETH_ENVIRONMENT_443_FILE $CONTAINER_NAME:$VIRTUAL_HOST_DIR/$VIRTUAL_HOST_SHIBBOLETH_ENVIRONMENT_443_FILE
sudo docker cp $SHIBBOLETH_ENVIRONMENT_DIR/$CONFIGURATION_SHIBBOLETH_ENVIRONMENT_ATTRIBUTES_MAP_FILE $CONTAINER_NAME:$SHIBBOLETH_CONF_DIR/$CONFIGURATION_SHIBBOLETH_ENVIRONMENT_ATTRIBUTES_MAP_FILE
sudo docker cp $SHIBBOLETH_ENVIRONMENT_DIR/$CONFIGURATION_SHIBBOLETH_ENVIRONMENT_SHIBBOLETH_XML_FILE $CONTAINER_NAME:$SHIBBOLETH_CONF_DIR/$CONFIGURATION_SHIBBOLETH_ENVIRONMENT_SHIBBOLETH_XML_FILE
sudo docker cp $SHIBBOLETH_ENVIRONMENT_DIR/$CONFIGURATION_SHIBBOLETH_ENVIRONMENT_INDEX_SECURE_FILE $CONTAINER_NAME:$SECURE_INDEX_PATH


ENABLE_MODULES_SCRIPT="enable-modules"

sudo chmod +x $ENABLE_MODULES_SCRIPT
sudo docker cp $ENABLE_MODULES_SCRIPT $CONTAINER_NAME:$CONTAINER_BASE_PATH/$ENABLE_MODULES_SCRIPT
sudo docker exec $CONTAINER_NAME $CONTAINER_BASE_PATH/$ENABLE_MODULES_SCRIPT